within Example2.Base.Systems;
model sys_with_inheritance
  "This model includes a pss \"container\" with 4 sub-structures"
  extends Example2.Utilities.Icons.ModelForLinearization;
  extends Example2.Interfaces.OutputsInterfaceWEfdAndAVRoutSmall;
  extends Example2.Base.Networks.Base;
  Modelica.Blocks.Interfaces.RealInput uPm
    annotation (Placement(transformation(extent={{-318,100},{-278,140}}), iconTransformation(extent={{-180,100},{-140,140}})));
  Modelica.Blocks.Interfaces.RealInput uPSS
    annotation (Placement(transformation(extent={{-320,40},{-280,80}}), iconTransformation(extent={{-182,40},{-142,80}})));
  Modelica.Blocks.Interfaces.RealInput uAVRin "Feedback input"
    annotation (Placement(transformation(extent={{-320,-20},{-280,20}}), iconTransformation(extent={{-182,-20},{-142,20}})));
  Modelica.Blocks.Interfaces.RealInput uLoad7
    annotation (Placement(transformation(extent={{-320,-80},{-280,-40}}), iconTransformation(extent={{-182,-80},{-142,-40}})));
  Modelica.Blocks.Interfaces.RealInput uLoad9
    annotation (Placement(transformation(extent={{-320,-140},{-280,-100}}), iconTransformation(extent={{-182,-140},{-142,-100}})));
  Plants.G1_AVR5substructuresPSSGov_IO_rev
                      g1(
    v_0=PF_results.voltages.V1,
    angle_0=PF_results.voltages.A1,
    P_0=PF_results.machines.P1_1,
    Q_0=PF_results.machines.Q1_1,
    T3g=Modelica.Constants.small,
    t1pssin=t1pssin,
    t2pssin=t2pssin,
    t3pssin=t3pssin,
    t4pssin=t4pssin,
    t5pssin=t5pssin,
    t6pssStop=t6pssStop,
    pss_vsmax=pss_vsmax,
    pss_vsmin=pss_vsmin,
    pss1_Kw=pss1_Kw,
    pss1_Tw=pss1_Tw,
    pss2_Kw=pss2_Kw,
    pss2_Tw=pss2_Tw,
    pss3_Kw=pss3_Kw,
    pss3_Tw=pss3_Tw,
    pss4_Kw=pss4_Kw,
    pss4_Tw=pss4_Tw,
    pss5_Kw=pss5_Kw,
    pss5_Tw=pss5_Tw)                    annotation (Placement(transformation(extent={{-268,10},{-234,140}})));
  Plants.G2 g2_sexs(
    v_0=PF_results.voltages.V2,
    angle_0=PF_results.voltages.A2,
    P_0=PF_results.machines.P2_1,
    Q_0=PF_results.machines.Q2_1)
    annotation (Placement(transformation(extent={{-254,-20},{-242,-8}})));
  Plants.G3 g3(
    v_0=PF_results.voltages.V3,
    angle_0=PF_results.voltages.A3,
    P_0=PF_results.machines.P3_1,
    Q_0=PF_results.machines.Q3_1,
    Rdroop=0.025,
    tGTypeII(T3=Modelica.Constants.small)) annotation (Placement(transformation(
        extent={{-6,-6},{6,6}},
        rotation=180,
        origin={268,16})));
  Plants.G4 g4_sexs(
    v_0=PF_results.voltages.V4,
    angle_0=PF_results.voltages.A4,
    P_0=PF_results.machines.P4_1,
    Q_0=PF_results.machines.Q4_1) annotation (Placement(transformation(
        extent={{-6,-6},{6,6}},
        rotation=180,
        origin={268,-24})));
  parameter OpenIPSL.Types.Time t1=Modelica.Constants.inf;

  parameter OpenIPSL.Types.PerUnit R=0 "Resistance"
    annotation (Dialog(group="Bus Fault Parameters"));
  parameter OpenIPSL.Types.PerUnit X=1e-5 "Reactance"
    annotation (Dialog(group="Bus Fault Parameters"));
  parameter OpenIPSL.Types.Time t1busfault=Modelica.Constants.inf
    "Start time of the fault" annotation (Dialog(group="Bus Fault Parameters"));
  parameter OpenIPSL.Types.Time t2busfault=Modelica.Constants.inf
    "End time of the fault" annotation (Dialog(group="Bus Fault Parameters"));
  parameter Real t1pssin=0 "Start time of the injection" annotation (Dialog(tab="PSS Parameters",group="PSS Parameter Change Timing"));
  parameter Real t2pssin=30 "Start time of the injection" annotation (Dialog(tab="PSS Parameters",group="PSS Parameter Change Timing"));
  parameter Real t3pssin=60 "Start time of the injection" annotation (Dialog(tab="PSS Parameters",group="PSS Parameter Change Timing"));
  parameter Real t4pssin=90 "Stop time of the injection" annotation (Dialog(tab="PSS Parameters",group="PSS Parameter Change Timing"));
  parameter Real t5pssin=120 "Stop time of the injection" annotation (Dialog(tab="PSS Parameters",group="PSS Parameter Change Timing"));
  parameter Real t6pssStop=Modelica.Constants.inf "Stop time of the injection" annotation (Dialog(tab="PSS Parameters",group="PSS Parameter Change Timing"));
  parameter OpenIPSL.Types.PerUnit pss_vsmax=0.2 "Max stabilizer output signal" annotation (Dialog(tab="PSS Parameters", group="All PSS's Limits"));
  parameter OpenIPSL.Types.PerUnit pss_vsmin=-0.2 "Min stabilizer output signal" annotation (Dialog(tab="PSS Parameters", group="All PSS's Limits"));
  parameter Real pss1_Kw=5 "Stabilizer gain [pu/pu]" annotation (Dialog(tab="PSS Parameters", group="PSS 1"));
  parameter OpenIPSL.Types.Time pss1_Tw=5 "Wash-out time constant" annotation (Dialog(tab="PSS Parameters", group="PSS 1"));
  parameter Real pss2_Kw=5 "Stabilizer gain [pu/pu]" annotation (Dialog(tab="PSS Parameters", group="PSS 2"));
  parameter OpenIPSL.Types.Time pss2_Tw=5 "Wash-out time constant" annotation (Dialog(tab="PSS Parameters", group="PSS 2"));
  parameter Real pss3_Kw=5 "Stabilizer gain [pu/pu]" annotation (Dialog(tab="PSS Parameters", group="PSS 3"));
  parameter OpenIPSL.Types.Time pss3_Tw=5 "Wash-out time constant" annotation (Dialog(tab="PSS Parameters", group="PSS 3"));
  parameter Real pss4_Kw=5 "Stabilizer gain [pu/pu]" annotation (Dialog(tab="PSS Parameters", group="PSS 4"));
  parameter OpenIPSL.Types.Time pss4_Tw=5 "Wash-out time constant" annotation (Dialog(tab="PSS Parameters", group="PSS 4"));
  parameter Real pss5_Kw=5 "Stabilizer gain [pu/pu]" annotation (Dialog(tab="PSS Parameters", group="PSS 5"));
  parameter OpenIPSL.Types.Time pss5_Tw=5 "Wash-out time constant" annotation (Dialog(tab="PSS Parameters", group="PSS 5"));
equation
  w = g1.g1.SPEED;
  delta = g1.g1.ANGLE;
  Vt = g1.g1.ETERM;
  P = g1.g1.P;
  Q = g1.g1.Q;
  AVRin = g1.AVRinput_meas; // AVR input, error signal to the avr
  AVRout = g1.AVRoutput_meas; // AVR output, Efd
  connect(g1.uPm, uPm) annotation (Line(
      points={{-279.9,101},{-276,101},{-276,120},{-298,120}},
      color={0,0,127},
      smooth=Smooth.Bezier));
  connect(g1.uPSS, uPSS) annotation (Line(
      points={{-279.9,75},{-279.9,72},{-274,72},{-274,60},{-300,60}},
      color={0,0,127},
      smooth=Smooth.Bezier));
  connect(g1.uVsAVR, uAVRin) annotation (Line(
      points={{-279.9,49},{-279.9,54},{-274,54},{-274,0},{-300,0}},
      color={0,0,127},
      smooth=Smooth.Bezier));
    annotation (Dialog(group="Line Trip Parameters"),
               preferredView = "diagram",
    Diagram(coordinateSystem(preserveAspectRatio=false, extent={{-280,-140},{280,140}})),
    Documentation(info="<html>
</html>"),
    experiment(
      StopTime=600,
      __Dymola_NumberOfIntervals=10000,
      __Dymola_Algorithm="Dassl"),
    Icon(graphics={Text(
          extent={{-98,80},{102,40}},
          textColor={0,140,72},
          textString="Detuned with TG"),
        Rectangle(
          extent={{-90,28},{10,-32}},
          lineColor={28,108,200},
          fillColor={195,208,218},
          fillPattern=FillPattern.Solid),
        Rectangle(
          extent={{-8,2},{92,-58}},
          lineColor={28,108,200},
          fillColor={211,225,236},
          fillPattern=FillPattern.Solid),
        Text(
          extent={{-90,28},{-66,2}},
          textColor={28,108,200},
          textStyle={TextStyle.Italic},
          textString="g1"),
        Text(
          extent={{-8,2},{16,-24}},
          textColor={28,108,200},
          textStyle={TextStyle.Italic},
          textString="g3"),
        Text(
          extent={{-100,-98},{100,-140}},
          textColor={28,108,200},
          textStyle={TextStyle.Bold},
          textString="G1: Seq.PSS"),
        Text(
          extent={{-100,-140},{100,-182}},
          textColor={217,67,180},
          textStyle={TextStyle.Bold},
          textString="G3: PSS")}));
end sys_with_inheritance;
